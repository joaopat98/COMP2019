Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: VarDeclaration SEMICOLON Declarations
    3             | FuncDeclaration SEMICOLON Declarations
    4             | %empty

    5 VarDeclaration: VAR VarSpec
    6               | VAR LPAR VarSpec SEMICOLON RPAR

    7 VarSpec: ID MultiId Type

    8 MultiId: COMMA ID MultiId
    9        | %empty

   10 Type: INT
   11     | FLOAT32
   12     | BOOL
   13     | STRING

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody
   15                | FUNC ID LPAR RPAR Type FuncBody
   16                | FUNC ID LPAR Parameters RPAR FuncBody
   17                | FUNC ID LPAR RPAR FuncBody

   18 Parameters: ID Type MultiParam

   19 MultiParam: COMMA ID Type MultiParam
   20           | %empty

   21 FuncBody: LBRACE VarsAndStatements RBRACE

   22 VarsAndStatements: SEMICOLON VarsAndStatements
   23                  | VarDeclaration SEMICOLON VarsAndStatements
   24                  | Statement SEMICOLON VarsAndStatements
   25                  | %empty

   26 Statement: ID ASSIGN Expr
   27          | LBRACE MultiStatement RBRACE
   28          | IF Expr LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE
   29          | IF Expr LBRACE MultiStatement RBRACE
   30          | FOR Expr LBRACE MultiStatement RBRACE
   31          | FOR LBRACE MultiStatement RBRACE
   32          | RETURN Expr
   33          | RETURN
   34          | FuncInvocation
   35          | ParseArgs
   36          | PRINT LPAR Expr RPAR
   37          | PRINT LPAR STRLIT RPAR
   38          | error

   39 MultiStatement: Statement SEMICOLON MultiStatement
   40               | %empty

   41 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   43 FuncInvocation: ID LPAR Expr ExtraFuncArgs RPAR
   44               | ID LPAR RPAR
   45               | ID LPAR error RPAR

   46 ExtraFuncArgs: COMMA Expr ExtraFuncArgs
   47              | %empty

   48 Expr: Expr OR Expr
   49     | Expr AND Expr
   50     | Expr LT Expr
   51     | Expr GT Expr
   52     | Expr EQ Expr
   53     | Expr NE Expr
   54     | Expr LE Expr
   55     | Expr GE Expr
   56     | Expr PLUS Expr
   57     | Expr MINUS Expr
   58     | Expr STAR Expr
   59     | Expr DIV Expr
   60     | Expr MOD Expr
   61     | NOT Expr
   62     | MINUS Expr
   63     | PLUS Expr
   64     | INTLIT
   65     | REALLIT
   66     | ID
   67     | FuncInvocation
   68     | LPAR Expr RPAR
   69     | LPAR error RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 38 42 45 69
ID (258) 1 7 8 14 15 16 17 18 19 26 41 42 43 44 45 66
INTLIT (259) 64
REALLIT (260) 65
STRLIT (261) 37
SEMICOLON (262) 1 2 3 6 22 23 24 39
BLANKID (263) 41 42
PACKAGE (264) 1
RETURN (265) 32 33
AND (266) 49
OR (267) 48
ASSIGN (268) 26 41 42
COMMA (269) 8 19 41 42 46
EQ (270) 52
NE (271) 53
GE (272) 55
GT (273) 51
LE (274) 54
LT (275) 50
LPAR (276) 6 14 15 16 17 36 37 41 42 43 44 45 68 69
RPAR (277) 6 14 15 16 17 36 37 41 42 43 44 45 68 69
LBRACE (278) 21 27 28 29 30 31
RBRACE (279) 21 27 28 29 30 31
LSQ (280) 41
RSQ (281) 41
MINUS (282) 57 62
PLUS (283) 56 63
STAR (284) 58
DIV (285) 59
MOD (286) 60
NOT (287) 61
IF (288) 28 29
ELSE (289) 28
FOR (290) 30 31
VAR (291) 5 6
INT (292) 10
FLOAT32 (293) 11
BOOL (294) 12
STRING (295) 13
PRINT (296) 36 37
PARSEINT (297) 41 42
FUNC (298) 14 15 16 17
CMDARGS (299) 41
RESERVED (300)
IMPORTANT (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
Program (48)
    on left: 1, on right: 0
Declarations (49)
    on left: 2 3 4, on right: 1 2 3
VarDeclaration (50)
    on left: 5 6, on right: 2 23
VarSpec (51)
    on left: 7, on right: 5 6
MultiId (52)
    on left: 8 9, on right: 7 8
Type (53)
    on left: 10 11 12 13, on right: 7 14 15 18 19
FuncDeclaration (54)
    on left: 14 15 16 17, on right: 3
Parameters (55)
    on left: 18, on right: 14 16
MultiParam (56)
    on left: 19 20, on right: 18 19
FuncBody (57)
    on left: 21, on right: 14 15 16 17
VarsAndStatements (58)
    on left: 22 23 24 25, on right: 21 22 23 24
Statement (59)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37 38, on right: 24 39
MultiStatement (60)
    on left: 39 40, on right: 27 28 29 30 31 39
ParseArgs (61)
    on left: 41 42, on right: 35
FuncInvocation (62)
    on left: 43 44 45, on right: 34 67
ExtraFuncArgs (63)
    on left: 46 47, on right: 43 46
Expr (64)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69, on right: 26 28 29 30 32 36 41 43 46 48 49 50 51 52
    53 54 55 56 57 58 59 60 61 62 63 68


State 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE . ID SEMICOLON Declarations

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 8
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 6

    5 VarDeclaration: VAR . VarSpec
    6               | VAR . LPAR VarSpec SEMICOLON RPAR

    ID    shift, and go to state 11
    LPAR  shift, and go to state 12

    VarSpec  go to state 13


State 7

   14 FuncDeclaration: FUNC . ID LPAR Parameters RPAR Type FuncBody
   15                | FUNC . ID LPAR RPAR Type FuncBody
   16                | FUNC . ID LPAR Parameters RPAR FuncBody
   17                | FUNC . ID LPAR RPAR FuncBody

    ID  shift, and go to state 14


State 8

    1 Program: PACKAGE ID SEMICOLON Declarations .

    $default  reduce using rule 1 (Program)


State 9

    2 Declarations: VarDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 15


State 10

    3 Declarations: FuncDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 11

    7 VarSpec: ID . MultiId Type

    COMMA  shift, and go to state 17

    $default  reduce using rule 9 (MultiId)

    MultiId  go to state 18


State 12

    6 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 11

    VarSpec  go to state 19


State 13

    5 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 5 (VarDeclaration)


State 14

   14 FuncDeclaration: FUNC ID . LPAR Parameters RPAR Type FuncBody
   15                | FUNC ID . LPAR RPAR Type FuncBody
   16                | FUNC ID . LPAR Parameters RPAR FuncBody
   17                | FUNC ID . LPAR RPAR FuncBody

    LPAR  shift, and go to state 20


State 15

    2 Declarations: VarDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 21
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 16

    3 Declarations: FuncDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 22
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 17

    8 MultiId: COMMA . ID MultiId

    ID  shift, and go to state 23


State 18

    7 VarSpec: ID MultiId . Type

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 28


State 19

    6 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 29


State 20

   14 FuncDeclaration: FUNC ID LPAR . Parameters RPAR Type FuncBody
   15                | FUNC ID LPAR . RPAR Type FuncBody
   16                | FUNC ID LPAR . Parameters RPAR FuncBody
   17                | FUNC ID LPAR . RPAR FuncBody

    ID    shift, and go to state 30
    RPAR  shift, and go to state 31

    Parameters  go to state 32


State 21

    2 Declarations: VarDeclaration SEMICOLON Declarations .

    $default  reduce using rule 2 (Declarations)


State 22

    3 Declarations: FuncDeclaration SEMICOLON Declarations .

    $default  reduce using rule 3 (Declarations)


State 23

    8 MultiId: COMMA ID . MultiId

    COMMA  shift, and go to state 17

    $default  reduce using rule 9 (MultiId)

    MultiId  go to state 33


State 24

   10 Type: INT .

    $default  reduce using rule 10 (Type)


State 25

   11 Type: FLOAT32 .

    $default  reduce using rule 11 (Type)


State 26

   12 Type: BOOL .

    $default  reduce using rule 12 (Type)


State 27

   13 Type: STRING .

    $default  reduce using rule 13 (Type)


State 28

    7 VarSpec: ID MultiId Type .

    $default  reduce using rule 7 (VarSpec)


State 29

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 34


State 30

   18 Parameters: ID . Type MultiParam

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 35


State 31

   15 FuncDeclaration: FUNC ID LPAR RPAR . Type FuncBody
   17                | FUNC ID LPAR RPAR . FuncBody

    LBRACE   shift, and go to state 36
    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type      go to state 37
    FuncBody  go to state 38


State 32

   14 FuncDeclaration: FUNC ID LPAR Parameters . RPAR Type FuncBody
   16                | FUNC ID LPAR Parameters . RPAR FuncBody

    RPAR  shift, and go to state 39


State 33

    8 MultiId: COMMA ID MultiId .

    $default  reduce using rule 8 (MultiId)


State 34

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 6 (VarDeclaration)


State 35

   18 Parameters: ID Type . MultiParam

    COMMA  shift, and go to state 40

    $default  reduce using rule 20 (MultiParam)

    MultiParam  go to state 41


State 36

   21 FuncBody: LBRACE . VarsAndStatements RBRACE

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 44
    RETURN     shift, and go to state 45
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    FOR        shift, and go to state 48
    VAR        shift, and go to state 6
    PRINT      shift, and go to state 49

    RBRACE  reduce using rule 25 (VarsAndStatements)

    VarDeclaration     go to state 50
    VarsAndStatements  go to state 51
    Statement          go to state 52
    ParseArgs          go to state 53
    FuncInvocation     go to state 54


State 37

   15 FuncDeclaration: FUNC ID LPAR RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 55


State 38

   17 FuncDeclaration: FUNC ID LPAR RPAR FuncBody .

    $default  reduce using rule 17 (FuncDeclaration)


State 39

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR . Type FuncBody
   16                | FUNC ID LPAR Parameters RPAR . FuncBody

    LBRACE   shift, and go to state 36
    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type      go to state 56
    FuncBody  go to state 57


State 40

   19 MultiParam: COMMA . ID Type MultiParam

    ID  shift, and go to state 58


State 41

   18 Parameters: ID Type MultiParam .

    $default  reduce using rule 18 (Parameters)


State 42

   38 Statement: error .

    $default  reduce using rule 38 (Statement)


State 43

   26 Statement: ID . ASSIGN Expr
   41 ParseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | ID . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   43 FuncInvocation: ID . LPAR Expr ExtraFuncArgs RPAR
   44               | ID . LPAR RPAR
   45               | ID . LPAR error RPAR

    ASSIGN  shift, and go to state 59
    COMMA   shift, and go to state 60
    LPAR    shift, and go to state 61


State 44

   22 VarsAndStatements: SEMICOLON . VarsAndStatements

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 44
    RETURN     shift, and go to state 45
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    FOR        shift, and go to state 48
    VAR        shift, and go to state 6
    PRINT      shift, and go to state 49

    RBRACE  reduce using rule 25 (VarsAndStatements)

    VarDeclaration     go to state 50
    VarsAndStatements  go to state 62
    Statement          go to state 52
    ParseArgs          go to state 53
    FuncInvocation     go to state 54


State 45

   32 Statement: RETURN . Expr
   33          | RETURN .

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    $default  reduce using rule 33 (Statement)

    FuncInvocation  go to state 70
    Expr            go to state 71


State 46

   27 Statement: LBRACE . MultiStatement RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RETURN  shift, and go to state 45
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    FOR     shift, and go to state 48
    PRINT   shift, and go to state 49

    RBRACE  reduce using rule 40 (MultiStatement)

    Statement       go to state 72
    MultiStatement  go to state 73
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 47

   28 Statement: IF . Expr LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE
   29          | IF . Expr LBRACE MultiStatement RBRACE

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 74


State 48

   30 Statement: FOR . Expr LBRACE MultiStatement RBRACE
   31          | FOR . LBRACE MultiStatement RBRACE

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    LBRACE   shift, and go to state 75
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 76


State 49

   36 Statement: PRINT . LPAR Expr RPAR
   37          | PRINT . LPAR STRLIT RPAR

    LPAR  shift, and go to state 77


State 50

   23 VarsAndStatements: VarDeclaration . SEMICOLON VarsAndStatements

    SEMICOLON  shift, and go to state 78


State 51

   21 FuncBody: LBRACE VarsAndStatements . RBRACE

    RBRACE  shift, and go to state 79


State 52

   24 VarsAndStatements: Statement . SEMICOLON VarsAndStatements

    SEMICOLON  shift, and go to state 80


State 53

   35 Statement: ParseArgs .

    $default  reduce using rule 35 (Statement)


State 54

   34 Statement: FuncInvocation .

    $default  reduce using rule 34 (Statement)


State 55

   15 FuncDeclaration: FUNC ID LPAR RPAR Type FuncBody .

    $default  reduce using rule 15 (FuncDeclaration)


State 56

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 81


State 57

   16 FuncDeclaration: FUNC ID LPAR Parameters RPAR FuncBody .

    $default  reduce using rule 16 (FuncDeclaration)


State 58

   19 MultiParam: COMMA ID . Type MultiParam

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 82


State 59

   26 Statement: ID ASSIGN . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 83


State 60

   41 ParseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | ID COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 84


State 61

   43 FuncInvocation: ID LPAR . Expr ExtraFuncArgs RPAR
   44               | ID LPAR . RPAR
   45               | ID LPAR . error RPAR

    error    shift, and go to state 85
    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    RPAR     shift, and go to state 86
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 87


State 62

   22 VarsAndStatements: SEMICOLON VarsAndStatements .

    $default  reduce using rule 22 (VarsAndStatements)


State 63

   43 FuncInvocation: ID . LPAR Expr ExtraFuncArgs RPAR
   44               | ID . LPAR RPAR
   45               | ID . LPAR error RPAR
   66 Expr: ID .

    LPAR  shift, and go to state 61

    $default  reduce using rule 66 (Expr)


State 64

   64 Expr: INTLIT .

    $default  reduce using rule 64 (Expr)


State 65

   65 Expr: REALLIT .

    $default  reduce using rule 65 (Expr)


State 66

   68 Expr: LPAR . Expr RPAR
   69     | LPAR . error RPAR

    error    shift, and go to state 88
    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 89


State 67

   62 Expr: MINUS . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 90


State 68

   63 Expr: PLUS . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 91


State 69

   61 Expr: NOT . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 92


State 70

   67 Expr: FuncInvocation .

    $default  reduce using rule 67 (Expr)


State 71

   32 Statement: RETURN Expr .
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    AND    shift, and go to state 93
    OR     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 32 (Statement)


State 72

   39 MultiStatement: Statement . SEMICOLON MultiStatement

    SEMICOLON  shift, and go to state 106


State 73

   27 Statement: LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 107


State 74

   28 Statement: IF Expr . LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE
   29          | IF Expr . LBRACE MultiStatement RBRACE
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    AND     shift, and go to state 93
    OR      shift, and go to state 94
    EQ      shift, and go to state 95
    NE      shift, and go to state 96
    GE      shift, and go to state 97
    GT      shift, and go to state 98
    LE      shift, and go to state 99
    LT      shift, and go to state 100
    LBRACE  shift, and go to state 108
    MINUS   shift, and go to state 101
    PLUS    shift, and go to state 102
    STAR    shift, and go to state 103
    DIV     shift, and go to state 104
    MOD     shift, and go to state 105


State 75

   31 Statement: FOR LBRACE . MultiStatement RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RETURN  shift, and go to state 45
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    FOR     shift, and go to state 48
    PRINT   shift, and go to state 49

    RBRACE  reduce using rule 40 (MultiStatement)

    Statement       go to state 72
    MultiStatement  go to state 109
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 76

   30 Statement: FOR Expr . LBRACE MultiStatement RBRACE
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    AND     shift, and go to state 93
    OR      shift, and go to state 94
    EQ      shift, and go to state 95
    NE      shift, and go to state 96
    GE      shift, and go to state 97
    GT      shift, and go to state 98
    LE      shift, and go to state 99
    LT      shift, and go to state 100
    LBRACE  shift, and go to state 110
    MINUS   shift, and go to state 101
    PLUS    shift, and go to state 102
    STAR    shift, and go to state 103
    DIV     shift, and go to state 104
    MOD     shift, and go to state 105


State 77

   36 Statement: PRINT LPAR . Expr RPAR
   37          | PRINT LPAR . STRLIT RPAR

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    STRLIT   shift, and go to state 111
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 112


State 78

   23 VarsAndStatements: VarDeclaration SEMICOLON . VarsAndStatements

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 44
    RETURN     shift, and go to state 45
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    FOR        shift, and go to state 48
    VAR        shift, and go to state 6
    PRINT      shift, and go to state 49

    RBRACE  reduce using rule 25 (VarsAndStatements)

    VarDeclaration     go to state 50
    VarsAndStatements  go to state 113
    Statement          go to state 52
    ParseArgs          go to state 53
    FuncInvocation     go to state 54


State 79

   21 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 21 (FuncBody)


State 80

   24 VarsAndStatements: Statement SEMICOLON . VarsAndStatements

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 44
    RETURN     shift, and go to state 45
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    FOR        shift, and go to state 48
    VAR        shift, and go to state 6
    PRINT      shift, and go to state 49

    RBRACE  reduce using rule 25 (VarsAndStatements)

    VarDeclaration     go to state 50
    VarsAndStatements  go to state 114
    Statement          go to state 52
    ParseArgs          go to state 53
    FuncInvocation     go to state 54


State 81

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody .

    $default  reduce using rule 14 (FuncDeclaration)


State 82

   19 MultiParam: COMMA ID Type . MultiParam

    COMMA  shift, and go to state 40

    $default  reduce using rule 20 (MultiParam)

    MultiParam  go to state 115


State 83

   26 Statement: ID ASSIGN Expr .
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    AND    shift, and go to state 93
    OR     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 26 (Statement)


State 84

   41 ParseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | ID COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 116


State 85

   45 FuncInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 117


State 86

   44 FuncInvocation: ID LPAR RPAR .

    $default  reduce using rule 44 (FuncInvocation)


State 87

   43 FuncInvocation: ID LPAR Expr . ExtraFuncArgs RPAR
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    AND    shift, and go to state 93
    OR     shift, and go to state 94
    COMMA  shift, and go to state 118
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 47 (ExtraFuncArgs)

    ExtraFuncArgs  go to state 119


State 88

   69 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 120


State 89

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   68     | LPAR Expr . RPAR

    AND    shift, and go to state 93
    OR     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    RPAR   shift, and go to state 121
    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105


State 90

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   62     | MINUS Expr .

    $default  reduce using rule 62 (Expr)


State 91

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   63     | PLUS Expr .

    $default  reduce using rule 63 (Expr)


State 92

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | NOT Expr .

    $default  reduce using rule 61 (Expr)


State 93

   49 Expr: Expr AND . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 122


State 94

   48 Expr: Expr OR . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 123


State 95

   52 Expr: Expr EQ . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 124


State 96

   53 Expr: Expr NE . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 125


State 97

   55 Expr: Expr GE . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 126


State 98

   51 Expr: Expr GT . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 127


State 99

   54 Expr: Expr LE . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 128


State 100

   50 Expr: Expr LT . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 129


State 101

   57 Expr: Expr MINUS . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 130


State 102

   56 Expr: Expr PLUS . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 131


State 103

   58 Expr: Expr STAR . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 132


State 104

   59 Expr: Expr DIV . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 133


State 105

   60 Expr: Expr MOD . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 134


State 106

   39 MultiStatement: Statement SEMICOLON . MultiStatement

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RETURN  shift, and go to state 45
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    FOR     shift, and go to state 48
    PRINT   shift, and go to state 49

    RBRACE  reduce using rule 40 (MultiStatement)

    Statement       go to state 72
    MultiStatement  go to state 135
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 107

   27 Statement: LBRACE MultiStatement RBRACE .

    $default  reduce using rule 27 (Statement)


State 108

   28 Statement: IF Expr LBRACE . MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE
   29          | IF Expr LBRACE . MultiStatement RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RETURN  shift, and go to state 45
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    FOR     shift, and go to state 48
    PRINT   shift, and go to state 49

    RBRACE  reduce using rule 40 (MultiStatement)

    Statement       go to state 72
    MultiStatement  go to state 136
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 109

   31 Statement: FOR LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 137


State 110

   30 Statement: FOR Expr LBRACE . MultiStatement RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RETURN  shift, and go to state 45
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    FOR     shift, and go to state 48
    PRINT   shift, and go to state 49

    RBRACE  reduce using rule 40 (MultiStatement)

    Statement       go to state 72
    MultiStatement  go to state 138
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 111

   37 Statement: PRINT LPAR STRLIT . RPAR

    RPAR  shift, and go to state 139


State 112

   36 Statement: PRINT LPAR Expr . RPAR
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    AND    shift, and go to state 93
    OR     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    RPAR   shift, and go to state 140
    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105


State 113

   23 VarsAndStatements: VarDeclaration SEMICOLON VarsAndStatements .

    $default  reduce using rule 23 (VarsAndStatements)


State 114

   24 VarsAndStatements: Statement SEMICOLON VarsAndStatements .

    $default  reduce using rule 24 (VarsAndStatements)


State 115

   19 MultiParam: COMMA ID Type MultiParam .

    $default  reduce using rule 19 (MultiParam)


State 116

   41 ParseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | ID COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 141


State 117

   45 FuncInvocation: ID LPAR error RPAR .

    $default  reduce using rule 45 (FuncInvocation)


State 118

   46 ExtraFuncArgs: COMMA . Expr ExtraFuncArgs

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 142


State 119

   43 FuncInvocation: ID LPAR Expr ExtraFuncArgs . RPAR

    RPAR  shift, and go to state 143


State 120

   69 Expr: LPAR error RPAR .

    $default  reduce using rule 69 (Expr)


State 121

   68 Expr: LPAR Expr RPAR .

    $default  reduce using rule 68 (Expr)


State 122

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   49     | Expr AND Expr .
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 49 (Expr)


State 123

   48 Expr: Expr . OR Expr
   48     | Expr OR Expr .
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 48 (Expr)


State 124

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   52     | Expr EQ Expr .
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 52 (Expr)


State 125

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   53     | Expr NE Expr .
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 53 (Expr)


State 126

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   55     | Expr GE Expr .
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 55 (Expr)


State 127

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   51     | Expr GT Expr .
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 51 (Expr)


State 128

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   54     | Expr LE Expr .
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 54 (Expr)


State 129

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   50     | Expr LT Expr .
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 50 (Expr)


State 130

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   57     | Expr MINUS Expr .
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    STAR  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 57 (Expr)


State 131

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   56     | Expr PLUS Expr .
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    STAR  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 56 (Expr)


State 132

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   58     | Expr STAR Expr .
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    $default  reduce using rule 58 (Expr)


State 133

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   59     | Expr DIV Expr .
   60     | Expr . MOD Expr

    $default  reduce using rule 59 (Expr)


State 134

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   60     | Expr MOD Expr .

    $default  reduce using rule 60 (Expr)


State 135

   39 MultiStatement: Statement SEMICOLON MultiStatement .

    $default  reduce using rule 39 (MultiStatement)


State 136

   28 Statement: IF Expr LBRACE MultiStatement . RBRACE ELSE LBRACE MultiStatement RBRACE
   29          | IF Expr LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 144


State 137

   31 Statement: FOR LBRACE MultiStatement RBRACE .

    $default  reduce using rule 31 (Statement)


State 138

   30 Statement: FOR Expr LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 145


State 139

   37 Statement: PRINT LPAR STRLIT RPAR .

    $default  reduce using rule 37 (Statement)


State 140

   36 Statement: PRINT LPAR Expr RPAR .

    $default  reduce using rule 36 (Statement)


State 141

   41 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR
   42          | ID COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 146


State 142

   46 ExtraFuncArgs: COMMA Expr . ExtraFuncArgs
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    AND    shift, and go to state 93
    OR     shift, and go to state 94
    COMMA  shift, and go to state 118
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 47 (ExtraFuncArgs)

    ExtraFuncArgs  go to state 147


State 143

   43 FuncInvocation: ID LPAR Expr ExtraFuncArgs RPAR .

    $default  reduce using rule 43 (FuncInvocation)


State 144

   28 Statement: IF Expr LBRACE MultiStatement RBRACE . ELSE LBRACE MultiStatement RBRACE
   29          | IF Expr LBRACE MultiStatement RBRACE .

    ELSE  shift, and go to state 148

    $default  reduce using rule 29 (Statement)


State 145

   30 Statement: FOR Expr LBRACE MultiStatement RBRACE .

    $default  reduce using rule 30 (Statement)


State 146

   41 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR
   42          | ID COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 149
    CMDARGS  shift, and go to state 150


State 147

   46 ExtraFuncArgs: COMMA Expr ExtraFuncArgs .

    $default  reduce using rule 46 (ExtraFuncArgs)


State 148

   28 Statement: IF Expr LBRACE MultiStatement RBRACE ELSE . LBRACE MultiStatement RBRACE

    LBRACE  shift, and go to state 151


State 149

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 152


State 150

   41 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 153


State 151

   28 Statement: IF Expr LBRACE MultiStatement RBRACE ELSE LBRACE . MultiStatement RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RETURN  shift, and go to state 45
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    FOR     shift, and go to state 48
    PRINT   shift, and go to state 49

    RBRACE  reduce using rule 40 (MultiStatement)

    Statement       go to state 72
    MultiStatement  go to state 154
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 152

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 42 (ParseArgs)


State 153

   41 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 155


State 154

   28 Statement: IF Expr LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 156


State 155

   41 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    AND    shift, and go to state 93
    OR     shift, and go to state 94
    EQ     shift, and go to state 95
    NE     shift, and go to state 96
    GE     shift, and go to state 97
    GT     shift, and go to state 98
    LE     shift, and go to state 99
    LT     shift, and go to state 100
    RSQ    shift, and go to state 157
    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105


State 156

   28 Statement: IF Expr LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE .

    $default  reduce using rule 28 (Statement)


State 157

   41 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 158


State 158

   41 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 41 (ParseArgs)
