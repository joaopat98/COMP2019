Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: VarDeclaration SEMICOLON Declarations
    3             | FuncDeclaration SEMICOLON Declarations
    4             | %empty

    5 VarDeclaration: VAR VarSpec
    6               | VAR LPAR VarSpec SEMICOLON RPAR

    7 MultiId: COMMA ID MultiId
    8        | %empty

    9 VarSpec: ID MultiId Type

   10 Type: INT
   11     | FLOAT32
   12     | BOOL
   13     | STRING

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody
   15                | FUNC ID LPAR RPAR Type FuncBody
   16                | FUNC ID LPAR Parameters RPAR FuncBody
   17                | FUNC ID LPAR RPAR FuncBody

   18 Parameters: ID Type COMMA ID Type
   19           | ID Type

   20 FuncBody: LBRACE VarsAndStatements RBRACE

   21 VarsAndStatements: VarsAndStatements SEMICOLON
   22                  | VarsAndStatements VarDeclaration SEMICOLON
   23                  | VarsAndStatements Statement SEMICOLON
   24                  | %empty

   25 Statement: ID ASSIGN Expr
   26          | LBRACE MultiStatement RBRACE
   27          | IF Expr LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE
   28          | IF Expr LBRACE MultiStatement RBRACE
   29          | FOR Expr LBRACE MultiStatement RBRACE
   30          | FOR LBRACE MultiStatement RBRACE
   31          | RETURN Expr
   32          | RETURN
   33          | FuncInvocation
   34          | ParseArgs
   35          | PRINT LPAR Expr RPAR
   36          | PRINT LPAR STRLIT RPAR

   37 MultiStatement: Statement SEMICOLON MultiStatement
   38               | %empty

   39 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

   40 FuncInvocation: ID LPAR FuncArgs RPAR

   41 FuncArgs: Expr ExtraFuncArgs
   42         | %empty

   43 ExtraFuncArgs: COMMA Expr ExtraFuncArgs
   44              | %empty

   45 Expr: Expr OR TerminalExpr
   46     | Expr AND TerminalExpr
   47     | Expr LT TerminalExpr
   48     | Expr GT TerminalExpr
   49     | Expr EQ TerminalExpr
   50     | Expr NE TerminalExpr
   51     | Expr LE TerminalExpr
   52     | Expr GE TerminalExpr
   53     | Expr PLUS TerminalExpr
   54     | Expr MINUS TerminalExpr
   55     | Expr STAR TerminalExpr
   56     | Expr DIV TerminalExpr
   57     | Expr MOD TerminalExpr
   58     | TerminalExpr

   59 TerminalExpr: NOT TerminalExpr
   60             | MINUS TerminalExpr
   61             | PLUS TerminalExpr
   62             | INTLIT
   63             | REALLIT
   64             | ID
   65             | FuncInvocation
   66             | LPAR Expr RPAR


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 1 7 9 14 15 16 17 18 19 25 39 40 64
INTLIT (259) 62
REALLIT (260) 63
STRLIT (261) 36
SEMICOLON (262) 1 2 3 6 21 22 23 37
BLANKID (263) 39
PACKAGE (264) 1
RETURN (265) 31 32
AND (266) 46
OR (267) 45
ASSIGN (268) 25 39
COMMA (269) 7 18 39 43
EQ (270) 49
NE (271) 50
GE (272) 52
GT (273) 48
LE (274) 51
LT (275) 47
LPAR (276) 6 14 15 16 17 35 36 39 40 66
RPAR (277) 6 14 15 16 17 35 36 39 40 66
LBRACE (278) 20 26 27 28 29 30
RBRACE (279) 20 26 27 28 29 30
LSQ (280) 39
RSQ (281) 39
MINUS (282) 54 60
PLUS (283) 53 61
STAR (284) 55
DIV (285) 56
MOD (286) 57
NOT (287) 59
IF (288) 27 28
ELSE (289) 27
FOR (290) 29 30
VAR (291) 5 6
INT (292) 10
FLOAT32 (293) 11
BOOL (294) 12
STRING (295) 13
PRINT (296) 35 36
PARSEINT (297) 39
FUNC (298) 14 15 16 17
CMDARGS (299) 39
RESERVED (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1, on right: 0
Declarations (48)
    on left: 2 3 4, on right: 1 2 3
VarDeclaration (49)
    on left: 5 6, on right: 2 22
MultiId (50)
    on left: 7 8, on right: 7 9
VarSpec (51)
    on left: 9, on right: 5 6
Type (52)
    on left: 10 11 12 13, on right: 9 14 15 18 19
FuncDeclaration (53)
    on left: 14 15 16 17, on right: 3
Parameters (54)
    on left: 18 19, on right: 14 16
FuncBody (55)
    on left: 20, on right: 14 15 16 17
VarsAndStatements (56)
    on left: 21 22 23 24, on right: 20 21 22 23
Statement (57)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36, on right: 23 37
MultiStatement (58)
    on left: 37 38, on right: 26 27 28 29 30 37
ParseArgs (59)
    on left: 39, on right: 34
FuncInvocation (60)
    on left: 40, on right: 33 65
FuncArgs (61)
    on left: 41 42, on right: 40
ExtraFuncArgs (62)
    on left: 43 44, on right: 41 43
Expr (63)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58, on right: 25
    27 28 29 31 35 39 41 43 45 46 47 48 49 50 51 52 53 54 55 56 57
    66
TerminalExpr (64)
    on left: 59 60 61 62 63 64 65 66, on right: 45 46 47 48 49 50 51
    52 53 54 55 56 57 58 59 60 61


State 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE . ID SEMICOLON Declarations

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 8
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 6

    5 VarDeclaration: VAR . VarSpec
    6               | VAR . LPAR VarSpec SEMICOLON RPAR

    ID    shift, and go to state 11
    LPAR  shift, and go to state 12

    VarSpec  go to state 13


State 7

   14 FuncDeclaration: FUNC . ID LPAR Parameters RPAR Type FuncBody
   15                | FUNC . ID LPAR RPAR Type FuncBody
   16                | FUNC . ID LPAR Parameters RPAR FuncBody
   17                | FUNC . ID LPAR RPAR FuncBody

    ID  shift, and go to state 14


State 8

    1 Program: PACKAGE ID SEMICOLON Declarations .

    $default  reduce using rule 1 (Program)


State 9

    2 Declarations: VarDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 15


State 10

    3 Declarations: FuncDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 11

    9 VarSpec: ID . MultiId Type

    COMMA  shift, and go to state 17

    $default  reduce using rule 8 (MultiId)

    MultiId  go to state 18


State 12

    6 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 11

    VarSpec  go to state 19


State 13

    5 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 5 (VarDeclaration)


State 14

   14 FuncDeclaration: FUNC ID . LPAR Parameters RPAR Type FuncBody
   15                | FUNC ID . LPAR RPAR Type FuncBody
   16                | FUNC ID . LPAR Parameters RPAR FuncBody
   17                | FUNC ID . LPAR RPAR FuncBody

    LPAR  shift, and go to state 20


State 15

    2 Declarations: VarDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 21
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 16

    3 Declarations: FuncDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 22
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 17

    7 MultiId: COMMA . ID MultiId

    ID  shift, and go to state 23


State 18

    9 VarSpec: ID MultiId . Type

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 28


State 19

    6 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 29


State 20

   14 FuncDeclaration: FUNC ID LPAR . Parameters RPAR Type FuncBody
   15                | FUNC ID LPAR . RPAR Type FuncBody
   16                | FUNC ID LPAR . Parameters RPAR FuncBody
   17                | FUNC ID LPAR . RPAR FuncBody

    ID    shift, and go to state 30
    RPAR  shift, and go to state 31

    Parameters  go to state 32


State 21

    2 Declarations: VarDeclaration SEMICOLON Declarations .

    $default  reduce using rule 2 (Declarations)


State 22

    3 Declarations: FuncDeclaration SEMICOLON Declarations .

    $default  reduce using rule 3 (Declarations)


State 23

    7 MultiId: COMMA ID . MultiId

    COMMA  shift, and go to state 17

    $default  reduce using rule 8 (MultiId)

    MultiId  go to state 33


State 24

   10 Type: INT .

    $default  reduce using rule 10 (Type)


State 25

   11 Type: FLOAT32 .

    $default  reduce using rule 11 (Type)


State 26

   12 Type: BOOL .

    $default  reduce using rule 12 (Type)


State 27

   13 Type: STRING .

    $default  reduce using rule 13 (Type)


State 28

    9 VarSpec: ID MultiId Type .

    $default  reduce using rule 9 (VarSpec)


State 29

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 34


State 30

   18 Parameters: ID . Type COMMA ID Type
   19           | ID . Type

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 35


State 31

   15 FuncDeclaration: FUNC ID LPAR RPAR . Type FuncBody
   17                | FUNC ID LPAR RPAR . FuncBody

    LBRACE   shift, and go to state 36
    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type      go to state 37
    FuncBody  go to state 38


State 32

   14 FuncDeclaration: FUNC ID LPAR Parameters . RPAR Type FuncBody
   16                | FUNC ID LPAR Parameters . RPAR FuncBody

    RPAR  shift, and go to state 39


State 33

    7 MultiId: COMMA ID MultiId .

    $default  reduce using rule 7 (MultiId)


State 34

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 6 (VarDeclaration)


State 35

   18 Parameters: ID Type . COMMA ID Type
   19           | ID Type .

    COMMA  shift, and go to state 40

    $default  reduce using rule 19 (Parameters)


State 36

   20 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 24 (VarsAndStatements)

    VarsAndStatements  go to state 41


State 37

   15 FuncDeclaration: FUNC ID LPAR RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 42


State 38

   17 FuncDeclaration: FUNC ID LPAR RPAR FuncBody .

    $default  reduce using rule 17 (FuncDeclaration)


State 39

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR . Type FuncBody
   16                | FUNC ID LPAR Parameters RPAR . FuncBody

    LBRACE   shift, and go to state 36
    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type      go to state 43
    FuncBody  go to state 44


State 40

   18 Parameters: ID Type COMMA . ID Type

    ID  shift, and go to state 45


State 41

   20 FuncBody: LBRACE VarsAndStatements . RBRACE
   21 VarsAndStatements: VarsAndStatements . SEMICOLON
   22                  | VarsAndStatements . VarDeclaration SEMICOLON
   23                  | VarsAndStatements . Statement SEMICOLON

    ID         shift, and go to state 46
    SEMICOLON  shift, and go to state 47
    RETURN     shift, and go to state 48
    LBRACE     shift, and go to state 49
    RBRACE     shift, and go to state 50
    IF         shift, and go to state 51
    FOR        shift, and go to state 52
    VAR        shift, and go to state 6
    PRINT      shift, and go to state 53

    VarDeclaration  go to state 54
    Statement       go to state 55
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 42

   15 FuncDeclaration: FUNC ID LPAR RPAR Type FuncBody .

    $default  reduce using rule 15 (FuncDeclaration)


State 43

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 58


State 44

   16 FuncDeclaration: FUNC ID LPAR Parameters RPAR FuncBody .

    $default  reduce using rule 16 (FuncDeclaration)


State 45

   18 Parameters: ID Type COMMA ID . Type

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 59


State 46

   25 Statement: ID . ASSIGN Expr
   39 ParseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   40 FuncInvocation: ID . LPAR FuncArgs RPAR

    ASSIGN  shift, and go to state 60
    COMMA   shift, and go to state 61
    LPAR    shift, and go to state 62


State 47

   21 VarsAndStatements: VarsAndStatements SEMICOLON .

    $default  reduce using rule 21 (VarsAndStatements)


State 48

   31 Statement: RETURN . Expr
   32          | RETURN .

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    $default  reduce using rule 32 (Statement)

    FuncInvocation  go to state 70
    Expr            go to state 71
    TerminalExpr    go to state 72


State 49

   26 Statement: LBRACE . MultiStatement RBRACE

    ID      shift, and go to state 46
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    PRINT   shift, and go to state 53

    $default  reduce using rule 38 (MultiStatement)

    Statement       go to state 73
    MultiStatement  go to state 74
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 50

   20 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 20 (FuncBody)


State 51

   27 Statement: IF . Expr LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE
   28          | IF . Expr LBRACE MultiStatement RBRACE

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 75
    TerminalExpr    go to state 72


State 52

   29 Statement: FOR . Expr LBRACE MultiStatement RBRACE
   30          | FOR . LBRACE MultiStatement RBRACE

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    LBRACE   shift, and go to state 76
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 77
    TerminalExpr    go to state 72


State 53

   35 Statement: PRINT . LPAR Expr RPAR
   36          | PRINT . LPAR STRLIT RPAR

    LPAR  shift, and go to state 78


State 54

   22 VarsAndStatements: VarsAndStatements VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 55

   23 VarsAndStatements: VarsAndStatements Statement . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 56

   34 Statement: ParseArgs .

    $default  reduce using rule 34 (Statement)


State 57

   33 Statement: FuncInvocation .

    $default  reduce using rule 33 (Statement)


State 58

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody .

    $default  reduce using rule 14 (FuncDeclaration)


State 59

   18 Parameters: ID Type COMMA ID Type .

    $default  reduce using rule 18 (Parameters)


State 60

   25 Statement: ID ASSIGN . Expr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 81
    TerminalExpr    go to state 72


State 61

   39 ParseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    BLANKID  shift, and go to state 82


State 62

   40 FuncInvocation: ID LPAR . FuncArgs RPAR

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    $default  reduce using rule 42 (FuncArgs)

    FuncInvocation  go to state 70
    FuncArgs        go to state 83
    Expr            go to state 84
    TerminalExpr    go to state 72


State 63

   40 FuncInvocation: ID . LPAR FuncArgs RPAR
   64 TerminalExpr: ID .

    LPAR  shift, and go to state 62

    $default  reduce using rule 64 (TerminalExpr)


State 64

   62 TerminalExpr: INTLIT .

    $default  reduce using rule 62 (TerminalExpr)


State 65

   63 TerminalExpr: REALLIT .

    $default  reduce using rule 63 (TerminalExpr)


State 66

   66 TerminalExpr: LPAR . Expr RPAR

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 85
    TerminalExpr    go to state 72


State 67

   60 TerminalExpr: MINUS . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 86


State 68

   61 TerminalExpr: PLUS . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 87


State 69

   59 TerminalExpr: NOT . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 88


State 70

   65 TerminalExpr: FuncInvocation .

    $default  reduce using rule 65 (TerminalExpr)


State 71

   31 Statement: RETURN Expr .
   45 Expr: Expr . OR TerminalExpr
   46     | Expr . AND TerminalExpr
   47     | Expr . LT TerminalExpr
   48     | Expr . GT TerminalExpr
   49     | Expr . EQ TerminalExpr
   50     | Expr . NE TerminalExpr
   51     | Expr . LE TerminalExpr
   52     | Expr . GE TerminalExpr
   53     | Expr . PLUS TerminalExpr
   54     | Expr . MINUS TerminalExpr
   55     | Expr . STAR TerminalExpr
   56     | Expr . DIV TerminalExpr
   57     | Expr . MOD TerminalExpr

    AND    shift, and go to state 89
    OR     shift, and go to state 90
    EQ     shift, and go to state 91
    NE     shift, and go to state 92
    GE     shift, and go to state 93
    GT     shift, and go to state 94
    LE     shift, and go to state 95
    LT     shift, and go to state 96
    MINUS  shift, and go to state 97
    PLUS   shift, and go to state 98
    STAR   shift, and go to state 99
    DIV    shift, and go to state 100
    MOD    shift, and go to state 101

    $default  reduce using rule 31 (Statement)


State 72

   58 Expr: TerminalExpr .

    $default  reduce using rule 58 (Expr)


State 73

   37 MultiStatement: Statement . SEMICOLON MultiStatement

    SEMICOLON  shift, and go to state 102


State 74

   26 Statement: LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 103


State 75

   27 Statement: IF Expr . LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE
   28          | IF Expr . LBRACE MultiStatement RBRACE
   45 Expr: Expr . OR TerminalExpr
   46     | Expr . AND TerminalExpr
   47     | Expr . LT TerminalExpr
   48     | Expr . GT TerminalExpr
   49     | Expr . EQ TerminalExpr
   50     | Expr . NE TerminalExpr
   51     | Expr . LE TerminalExpr
   52     | Expr . GE TerminalExpr
   53     | Expr . PLUS TerminalExpr
   54     | Expr . MINUS TerminalExpr
   55     | Expr . STAR TerminalExpr
   56     | Expr . DIV TerminalExpr
   57     | Expr . MOD TerminalExpr

    AND     shift, and go to state 89
    OR      shift, and go to state 90
    EQ      shift, and go to state 91
    NE      shift, and go to state 92
    GE      shift, and go to state 93
    GT      shift, and go to state 94
    LE      shift, and go to state 95
    LT      shift, and go to state 96
    LBRACE  shift, and go to state 104
    MINUS   shift, and go to state 97
    PLUS    shift, and go to state 98
    STAR    shift, and go to state 99
    DIV     shift, and go to state 100
    MOD     shift, and go to state 101


State 76

   30 Statement: FOR LBRACE . MultiStatement RBRACE

    ID      shift, and go to state 46
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    PRINT   shift, and go to state 53

    $default  reduce using rule 38 (MultiStatement)

    Statement       go to state 73
    MultiStatement  go to state 105
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 77

   29 Statement: FOR Expr . LBRACE MultiStatement RBRACE
   45 Expr: Expr . OR TerminalExpr
   46     | Expr . AND TerminalExpr
   47     | Expr . LT TerminalExpr
   48     | Expr . GT TerminalExpr
   49     | Expr . EQ TerminalExpr
   50     | Expr . NE TerminalExpr
   51     | Expr . LE TerminalExpr
   52     | Expr . GE TerminalExpr
   53     | Expr . PLUS TerminalExpr
   54     | Expr . MINUS TerminalExpr
   55     | Expr . STAR TerminalExpr
   56     | Expr . DIV TerminalExpr
   57     | Expr . MOD TerminalExpr

    AND     shift, and go to state 89
    OR      shift, and go to state 90
    EQ      shift, and go to state 91
    NE      shift, and go to state 92
    GE      shift, and go to state 93
    GT      shift, and go to state 94
    LE      shift, and go to state 95
    LT      shift, and go to state 96
    LBRACE  shift, and go to state 106
    MINUS   shift, and go to state 97
    PLUS    shift, and go to state 98
    STAR    shift, and go to state 99
    DIV     shift, and go to state 100
    MOD     shift, and go to state 101


State 78

   35 Statement: PRINT LPAR . Expr RPAR
   36          | PRINT LPAR . STRLIT RPAR

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    STRLIT   shift, and go to state 107
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 108
    TerminalExpr    go to state 72


State 79

   22 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON .

    $default  reduce using rule 22 (VarsAndStatements)


State 80

   23 VarsAndStatements: VarsAndStatements Statement SEMICOLON .

    $default  reduce using rule 23 (VarsAndStatements)


State 81

   25 Statement: ID ASSIGN Expr .
   45 Expr: Expr . OR TerminalExpr
   46     | Expr . AND TerminalExpr
   47     | Expr . LT TerminalExpr
   48     | Expr . GT TerminalExpr
   49     | Expr . EQ TerminalExpr
   50     | Expr . NE TerminalExpr
   51     | Expr . LE TerminalExpr
   52     | Expr . GE TerminalExpr
   53     | Expr . PLUS TerminalExpr
   54     | Expr . MINUS TerminalExpr
   55     | Expr . STAR TerminalExpr
   56     | Expr . DIV TerminalExpr
   57     | Expr . MOD TerminalExpr

    AND    shift, and go to state 89
    OR     shift, and go to state 90
    EQ     shift, and go to state 91
    NE     shift, and go to state 92
    GE     shift, and go to state 93
    GT     shift, and go to state 94
    LE     shift, and go to state 95
    LT     shift, and go to state 96
    MINUS  shift, and go to state 97
    PLUS   shift, and go to state 98
    STAR   shift, and go to state 99
    DIV    shift, and go to state 100
    MOD    shift, and go to state 101

    $default  reduce using rule 25 (Statement)


State 82

   39 ParseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    ASSIGN  shift, and go to state 109


State 83

   40 FuncInvocation: ID LPAR FuncArgs . RPAR

    RPAR  shift, and go to state 110


State 84

   41 FuncArgs: Expr . ExtraFuncArgs
   45 Expr: Expr . OR TerminalExpr
   46     | Expr . AND TerminalExpr
   47     | Expr . LT TerminalExpr
   48     | Expr . GT TerminalExpr
   49     | Expr . EQ TerminalExpr
   50     | Expr . NE TerminalExpr
   51     | Expr . LE TerminalExpr
   52     | Expr . GE TerminalExpr
   53     | Expr . PLUS TerminalExpr
   54     | Expr . MINUS TerminalExpr
   55     | Expr . STAR TerminalExpr
   56     | Expr . DIV TerminalExpr
   57     | Expr . MOD TerminalExpr

    AND    shift, and go to state 89
    OR     shift, and go to state 90
    COMMA  shift, and go to state 111
    EQ     shift, and go to state 91
    NE     shift, and go to state 92
    GE     shift, and go to state 93
    GT     shift, and go to state 94
    LE     shift, and go to state 95
    LT     shift, and go to state 96
    MINUS  shift, and go to state 97
    PLUS   shift, and go to state 98
    STAR   shift, and go to state 99
    DIV    shift, and go to state 100
    MOD    shift, and go to state 101

    $default  reduce using rule 44 (ExtraFuncArgs)

    ExtraFuncArgs  go to state 112


State 85

   45 Expr: Expr . OR TerminalExpr
   46     | Expr . AND TerminalExpr
   47     | Expr . LT TerminalExpr
   48     | Expr . GT TerminalExpr
   49     | Expr . EQ TerminalExpr
   50     | Expr . NE TerminalExpr
   51     | Expr . LE TerminalExpr
   52     | Expr . GE TerminalExpr
   53     | Expr . PLUS TerminalExpr
   54     | Expr . MINUS TerminalExpr
   55     | Expr . STAR TerminalExpr
   56     | Expr . DIV TerminalExpr
   57     | Expr . MOD TerminalExpr
   66 TerminalExpr: LPAR Expr . RPAR

    AND    shift, and go to state 89
    OR     shift, and go to state 90
    EQ     shift, and go to state 91
    NE     shift, and go to state 92
    GE     shift, and go to state 93
    GT     shift, and go to state 94
    LE     shift, and go to state 95
    LT     shift, and go to state 96
    RPAR   shift, and go to state 113
    MINUS  shift, and go to state 97
    PLUS   shift, and go to state 98
    STAR   shift, and go to state 99
    DIV    shift, and go to state 100
    MOD    shift, and go to state 101


State 86

   60 TerminalExpr: MINUS TerminalExpr .

    $default  reduce using rule 60 (TerminalExpr)


State 87

   61 TerminalExpr: PLUS TerminalExpr .

    $default  reduce using rule 61 (TerminalExpr)


State 88

   59 TerminalExpr: NOT TerminalExpr .

    $default  reduce using rule 59 (TerminalExpr)


State 89

   46 Expr: Expr AND . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 114


State 90

   45 Expr: Expr OR . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 115


State 91

   49 Expr: Expr EQ . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 116


State 92

   50 Expr: Expr NE . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 117


State 93

   52 Expr: Expr GE . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 118


State 94

   48 Expr: Expr GT . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 119


State 95

   51 Expr: Expr LE . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 120


State 96

   47 Expr: Expr LT . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 121


State 97

   54 Expr: Expr MINUS . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 122


State 98

   53 Expr: Expr PLUS . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 123


State 99

   55 Expr: Expr STAR . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 124


State 100

   56 Expr: Expr DIV . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 125


State 101

   57 Expr: Expr MOD . TerminalExpr

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    TerminalExpr    go to state 126


State 102

   37 MultiStatement: Statement SEMICOLON . MultiStatement

    ID      shift, and go to state 46
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    PRINT   shift, and go to state 53

    $default  reduce using rule 38 (MultiStatement)

    Statement       go to state 73
    MultiStatement  go to state 127
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 103

   26 Statement: LBRACE MultiStatement RBRACE .

    $default  reduce using rule 26 (Statement)


State 104

   27 Statement: IF Expr LBRACE . MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE
   28          | IF Expr LBRACE . MultiStatement RBRACE

    ID      shift, and go to state 46
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    PRINT   shift, and go to state 53

    $default  reduce using rule 38 (MultiStatement)

    Statement       go to state 73
    MultiStatement  go to state 128
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 105

   30 Statement: FOR LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 129


State 106

   29 Statement: FOR Expr LBRACE . MultiStatement RBRACE

    ID      shift, and go to state 46
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    PRINT   shift, and go to state 53

    $default  reduce using rule 38 (MultiStatement)

    Statement       go to state 73
    MultiStatement  go to state 130
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 107

   36 Statement: PRINT LPAR STRLIT . RPAR

    RPAR  shift, and go to state 131


State 108

   35 Statement: PRINT LPAR Expr . RPAR
   45 Expr: Expr . OR TerminalExpr
   46     | Expr . AND TerminalExpr
   47     | Expr . LT TerminalExpr
   48     | Expr . GT TerminalExpr
   49     | Expr . EQ TerminalExpr
   50     | Expr . NE TerminalExpr
   51     | Expr . LE TerminalExpr
   52     | Expr . GE TerminalExpr
   53     | Expr . PLUS TerminalExpr
   54     | Expr . MINUS TerminalExpr
   55     | Expr . STAR TerminalExpr
   56     | Expr . DIV TerminalExpr
   57     | Expr . MOD TerminalExpr

    AND    shift, and go to state 89
    OR     shift, and go to state 90
    EQ     shift, and go to state 91
    NE     shift, and go to state 92
    GE     shift, and go to state 93
    GT     shift, and go to state 94
    LE     shift, and go to state 95
    LT     shift, and go to state 96
    RPAR   shift, and go to state 132
    MINUS  shift, and go to state 97
    PLUS   shift, and go to state 98
    STAR   shift, and go to state 99
    DIV    shift, and go to state 100
    MOD    shift, and go to state 101


State 109

   39 ParseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    PARSEINT  shift, and go to state 133


State 110

   40 FuncInvocation: ID LPAR FuncArgs RPAR .

    $default  reduce using rule 40 (FuncInvocation)


State 111

   43 ExtraFuncArgs: COMMA . Expr ExtraFuncArgs

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 134
    TerminalExpr    go to state 72


State 112

   41 FuncArgs: Expr ExtraFuncArgs .

    $default  reduce using rule 41 (FuncArgs)


State 113

   66 TerminalExpr: LPAR Expr RPAR .

    $default  reduce using rule 66 (TerminalExpr)


State 114

   46 Expr: Expr AND TerminalExpr .

    $default  reduce using rule 46 (Expr)


State 115

   45 Expr: Expr OR TerminalExpr .

    $default  reduce using rule 45 (Expr)


State 116

   49 Expr: Expr EQ TerminalExpr .

    $default  reduce using rule 49 (Expr)


State 117

   50 Expr: Expr NE TerminalExpr .

    $default  reduce using rule 50 (Expr)


State 118

   52 Expr: Expr GE TerminalExpr .

    $default  reduce using rule 52 (Expr)


State 119

   48 Expr: Expr GT TerminalExpr .

    $default  reduce using rule 48 (Expr)


State 120

   51 Expr: Expr LE TerminalExpr .

    $default  reduce using rule 51 (Expr)


State 121

   47 Expr: Expr LT TerminalExpr .

    $default  reduce using rule 47 (Expr)


State 122

   54 Expr: Expr MINUS TerminalExpr .

    $default  reduce using rule 54 (Expr)


State 123

   53 Expr: Expr PLUS TerminalExpr .

    $default  reduce using rule 53 (Expr)


State 124

   55 Expr: Expr STAR TerminalExpr .

    $default  reduce using rule 55 (Expr)


State 125

   56 Expr: Expr DIV TerminalExpr .

    $default  reduce using rule 56 (Expr)


State 126

   57 Expr: Expr MOD TerminalExpr .

    $default  reduce using rule 57 (Expr)


State 127

   37 MultiStatement: Statement SEMICOLON MultiStatement .

    $default  reduce using rule 37 (MultiStatement)


State 128

   27 Statement: IF Expr LBRACE MultiStatement . RBRACE ELSE LBRACE MultiStatement RBRACE
   28          | IF Expr LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 135


State 129

   30 Statement: FOR LBRACE MultiStatement RBRACE .

    $default  reduce using rule 30 (Statement)


State 130

   29 Statement: FOR Expr LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 136


State 131

   36 Statement: PRINT LPAR STRLIT RPAR .

    $default  reduce using rule 36 (Statement)


State 132

   35 Statement: PRINT LPAR Expr RPAR .

    $default  reduce using rule 35 (Statement)


State 133

   39 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR

    LPAR  shift, and go to state 137


State 134

   43 ExtraFuncArgs: COMMA Expr . ExtraFuncArgs
   45 Expr: Expr . OR TerminalExpr
   46     | Expr . AND TerminalExpr
   47     | Expr . LT TerminalExpr
   48     | Expr . GT TerminalExpr
   49     | Expr . EQ TerminalExpr
   50     | Expr . NE TerminalExpr
   51     | Expr . LE TerminalExpr
   52     | Expr . GE TerminalExpr
   53     | Expr . PLUS TerminalExpr
   54     | Expr . MINUS TerminalExpr
   55     | Expr . STAR TerminalExpr
   56     | Expr . DIV TerminalExpr
   57     | Expr . MOD TerminalExpr

    AND    shift, and go to state 89
    OR     shift, and go to state 90
    COMMA  shift, and go to state 111
    EQ     shift, and go to state 91
    NE     shift, and go to state 92
    GE     shift, and go to state 93
    GT     shift, and go to state 94
    LE     shift, and go to state 95
    LT     shift, and go to state 96
    MINUS  shift, and go to state 97
    PLUS   shift, and go to state 98
    STAR   shift, and go to state 99
    DIV    shift, and go to state 100
    MOD    shift, and go to state 101

    $default  reduce using rule 44 (ExtraFuncArgs)

    ExtraFuncArgs  go to state 138


State 135

   27 Statement: IF Expr LBRACE MultiStatement RBRACE . ELSE LBRACE MultiStatement RBRACE
   28          | IF Expr LBRACE MultiStatement RBRACE .

    ELSE  shift, and go to state 139

    $default  reduce using rule 28 (Statement)


State 136

   29 Statement: FOR Expr LBRACE MultiStatement RBRACE .

    $default  reduce using rule 29 (Statement)


State 137

   39 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR

    CMDARGS  shift, and go to state 140


State 138

   43 ExtraFuncArgs: COMMA Expr ExtraFuncArgs .

    $default  reduce using rule 43 (ExtraFuncArgs)


State 139

   27 Statement: IF Expr LBRACE MultiStatement RBRACE ELSE . LBRACE MultiStatement RBRACE

    LBRACE  shift, and go to state 141


State 140

   39 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 142


State 141

   27 Statement: IF Expr LBRACE MultiStatement RBRACE ELSE LBRACE . MultiStatement RBRACE

    ID      shift, and go to state 46
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    IF      shift, and go to state 51
    FOR     shift, and go to state 52
    PRINT   shift, and go to state 53

    $default  reduce using rule 38 (MultiStatement)

    Statement       go to state 73
    MultiStatement  go to state 143
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 142

   39 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    ID       shift, and go to state 63
    INTLIT   shift, and go to state 64
    REALLIT  shift, and go to state 65
    LPAR     shift, and go to state 66
    MINUS    shift, and go to state 67
    PLUS     shift, and go to state 68
    NOT      shift, and go to state 69

    FuncInvocation  go to state 70
    Expr            go to state 144
    TerminalExpr    go to state 72


State 143

   27 Statement: IF Expr LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement . RBRACE

    RBRACE  shift, and go to state 145


State 144

   39 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   45 Expr: Expr . OR TerminalExpr
   46     | Expr . AND TerminalExpr
   47     | Expr . LT TerminalExpr
   48     | Expr . GT TerminalExpr
   49     | Expr . EQ TerminalExpr
   50     | Expr . NE TerminalExpr
   51     | Expr . LE TerminalExpr
   52     | Expr . GE TerminalExpr
   53     | Expr . PLUS TerminalExpr
   54     | Expr . MINUS TerminalExpr
   55     | Expr . STAR TerminalExpr
   56     | Expr . DIV TerminalExpr
   57     | Expr . MOD TerminalExpr

    AND    shift, and go to state 89
    OR     shift, and go to state 90
    EQ     shift, and go to state 91
    NE     shift, and go to state 92
    GE     shift, and go to state 93
    GT     shift, and go to state 94
    LE     shift, and go to state 95
    LT     shift, and go to state 96
    RSQ    shift, and go to state 146
    MINUS  shift, and go to state 97
    PLUS   shift, and go to state 98
    STAR   shift, and go to state 99
    DIV    shift, and go to state 100
    MOD    shift, and go to state 101


State 145

   27 Statement: IF Expr LBRACE MultiStatement RBRACE ELSE LBRACE MultiStatement RBRACE .

    $default  reduce using rule 27 (Statement)


State 146

   39 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 147


State 147

   39 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 39 (ParseArgs)
